{
  "publisher": "biometria-se",
  "name": "grizzly-loadtester-vscode",
  "displayName": "Grizzly Loadtester for VSCode",
  "description": "Visual Studio Code extension for grizzly projects",
  "author": "Biometria <opensource@biometria.se>",
  "license": "MIT",
  "version": "0.0.0",
  "icon": "images/icon.png",
  "galleryBanner": {
    "theme": "dark",
    "color": "#795649"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/biometria-se/grizzly-lsp"
  },
  "bugs": {
    "url": "https://github.com/Biometria-se/grizzly/issues"
  },
  "homepage": "https://biometria-se.github.io/grizzly/",
  "categories": [
    "Testing",
    "Programming Languages"
  ],
  "keywords": [
    "grizzly",
    "load testing",
    "locust"
  ],
  "qna": "false",
  "engines": {
    "node": ">=18.12.1",
    "vscode": "^1.85.0"
  },
  "extensionDependencies": [
    "ms-python.python"
  ],
  "activationEvents": [],
  "main": "./out/src/extension",
  "contributes": {
    "languages": [
      {
        "id": "grizzly-gherkin",
        "aliases": [
          "gherkin",
          "feature"
        ],
        "extensions": [
          ".feature",
          ".grizzly"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "grizzly-gherkin",
        "scopeName": "text.gherkin.feature",
        "path": "./syntaxes/feature.tmLanguage"
      }
    ],
    "commands": [
      {
        "command": "grizzly.server.restart",
        "title": "Restart Language Server",
        "category": "Grizzly"
      },
      {
        "command": "grizzly.server.inventory.rebuild",
        "title": "Rebuild step inventory",
        "category": "Grizzly"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Grizzly",
      "properties": {
        "grizzly.server.connection": {
          "scope": "resource",
          "type": "string",
          "default": "stdio",
          "enum": [
            "socket",
            "stdio"
          ],
          "description": "How to connect to language server, with 'socket' the server has to be started manually"
        },
        "grizzly.stdio.module": {
          "scope": "resource",
          "type": "string",
          "default": "grizzly_ls",
          "description": "Language server module"
        },
        "grizzly.stdio.args": {
          "scope": "resource",
          "type": "array",
          "default": [],
          "description": "Additional arguments used by the language server"
        },
        "grizzly.socket.host": {
          "scope": "resource",
          "type": "string",
          "default": "127.0.0.1"
        },
        "grizzly.socket.port": {
          "scope": "resource",
          "type": "number",
          "default": 4444
        },
        "grizzly.variable_pattern": {
          "scope": "resource",
          "type": "array",
          "default": [
            ".*ask for value of variable \"([^\"]*)\"$",
            ".*value for variable \"([^\"]*)\" is \".*?\"$"
          ],
          "description": "A list of regular expressions matching step expressions that sets variables, this is needed for being able to auto-complete variable names. The regular expression must have one matching group, being the position with the variable name"
        },
        "grizzly.use_virtual_environment": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Install project dependencies in a seperate virtual environment"
        },
        "grizzly.pip_extra_index_url": {
          "scope": "resource",
          "type": "string",
          "default": "",
          "description": "URL to index that dependencies should be downloaded from instead of pypi.org"
        },
        "grizzly.diagnostics_on_save_only": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Diagnosing a feature file can be a performance hit, only enable if you know what you are doing"
        },
        "grizzly.quick_fix.step_impl_template": {
          "scope": "resource",
          "type": "string",
          "default": null,
          "description": "Template for missing step implementation quick fixes"
        },
        "grizzly.file_ignore_patterns": {
          "scope": "resource",
          "type": "array",
          "default": null,
          "description": "List of glob patterns for files to ignore during source compilation"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run build-base -- --minify",
    "build-base": "esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --platform=node",
    "build": "npm run build-base -- --sourcemap",
    "watch": "npm run build-base -- --sourcemap --watch",
    "tsc-watch": "tsc -b -w",
    "compile": "tsc -b",
    "lint": "eslint src/ --ext .ts,.tsx",
    "lint-fix": "eslint src/ --ext .ts,.tsx --fix",
    "pretest": "npm run compile",
    "test": "node out/tests/runTest",
    "licenses": "npm-license-crawler --json"
  },
  "dependencies": {
    "vscode-languageclient": "^9.0.1",
    "@vscode/python-extension": "^1.0.5"
  },
  "devDependencies": {
    "@types/chai": "^4.3.11",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.6",
    "@types/node": "^20.10.5",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "@vscode/test-electron": "^2.3.8",
    "chai": "^4.3.10",
    "esbuild": "^0.19.10",
    "eslint": "^8.56.0",
    "eslint-config-standard-with-typescript": "^39.1.1",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-n": "^16.5.0",
    "eslint-plugin-promise": "^6.1.1",
    "mocha": "^10.2.0",
    "npm-license-crawler": "^0.2.1",
    "typescript": "^5.3.3"
  }
}
