name: code quality

on:
  pull_request:
    branches:
    - main
  workflow_dispatch:

jobs:
  server:
    name: server
    runs-on: ${{ matrix.runs-on }}
    defaults:
      run:
        working-directory: ./grizzly-ls

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10']
        runs-on: ['ubuntu-latest']
        include:
          - python-version: '3.10'
            runs-on: windows-latest

    steps:
    - name: checkout
      id: checkout
      uses: actions/checkout@v3

    - name: setup python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"

    - name: install dependencies
      id: pip
      working-directory: ./
      run: |
        bash ./scripts/install.sh server

    - name: pytest
      id: pytest
      run: python -m pytest

    - name: coverage
      id: coverage
      run: python -m coverage report

  clients:
    name: clients
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      id: checkout
      uses: actions/checkout@v3

    - name: create client inventory
      id: create-inventory
      run: |
        echo "::set-output name=matrix::$(ls -1d client/* | awk 'BEGIN {printf "["} {printf "\""$0"\", "} END {print "]"}' | sed -r 's|", \]$|"\]|')"

    outputs:
      matrix: ${{ steps.create-inventory.outputs.matrix }}

  client:
    name: "${{ matrix.client }} (${{ matrix.runs-on }})"
    runs-on: ${{ matrix.runs-on }}
    needs: clients

    strategy:
      fail-fast: false
      matrix:
        client: ${{ fromJson(needs.clients.outputs.matrix) }}
        runs-on: ['ubuntu-latest', 'windows-latest']

    steps:
    - name: checkout
      id: checkout
      uses: actions/checkout@v3

    - name: setup python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: "pip"

    - name: install dependencies
      id: install
      run: |
        bash ./scripts/install.sh "${{ matrix.client }}"
        bash ./scripts/install.sh server +e

    - name: test
      id: test
      uses: GabrielBB/xvfb-action@v1
      with:
        run: |
          npm test
        working-directory: "./${{ matrix.client }}"

  releaseable:
    name: releasable
    runs-on: 'ubuntu-latest'
    if: always()
    needs:
    - server
    - client

    steps:
    - uses: technote-space/workflow-conclusion-action@v2
    - run: |
        [[ "${{ env.WORKFLOW_CONCLUSION }}" == "success" ]] || exit 1
